{"version":3,"sources":["components/SearchBar.js","components/MoviePoster.js","components/MovieList.js","config.js","components/SearchResults.js","components/Tabs.js","components/SavedList.js","components/MovieCard.js","components/Movie.js","data/movies.js","App.js","index.js"],"names":["SearchBar","useState","searchText","setSearchText","history","useHistory","id","to","className","onSubmit","e","preventDefault","push","InputGroup","Input","value","onChange","target","InputGroupAddon","addonType","Button","color","MoviePoster","props","movie","imdbID","Title","Poster","onClick","src","alt","MovieList","movies","Object","values","map","key","SearchResults","location","useLocation","useParams","term","page","searchResults","setSearchResults","totalResults","setTotalResults","useEffect","url","axios","get","then","filtered","data","Search","filter","handleSearch","aria-label","previousLabel","previousClassName","nextLabel","nextClassName","breakLabel","breakClassName","breakLinkClassName","forcePage","Number","pageCount","Math","ceil","pageClassName","pageLinkClassName","previousLinkClassName","nextLinkClassName","marginPagesDisplayed","onPageChange","selected","pageRangeDisplayed","containerClassName","subContainerClassName","activeClassName","Alert","Tabs","SavedList","savedList","length","MovieCard","handleList","addToSavedList","deleteFromSavedList","Director","imdbRating","Actors","Plot","isSaved","includes","type","Movie","useRouteMatch","params","handleMovies","setMovies","error","setError","Error","copy","tt0068646","Year","Rated","Released","Runtime","Genre","Writer","Language","Country","Awards","Ratings","Source","Value","Metascore","imdbVotes","Type","DVD","BoxOffice","Production","Website","Response","tt0076759","tt0120737","tt0082971","tt0108358","tt0103064","tt0062622","tt0107048","tt0071853","App","setSavedList","initialData","basename","path","exact","el","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81732874.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { InputGroup, InputGroupAddon, Input, Button } from \"reactstrap\";\n\nimport \"./SearchBar.scss\";\n\nfunction SearchBar() {\n  const [searchText, setSearchText] = useState(\"\");\n  const history = useHistory();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    history.push(`/search/${searchText}`);\n  };\n\n  return (\n    <header id=\"searchbar\">\n      <nav>\n        <Link to=\"/\">\n          <h1 className=\"title\">OMDb Explorer</h1>\n        </Link>\n        <form onSubmit={handleSubmit}>\n          <InputGroup>\n            <Input\n              value={searchText}\n              onChange={e => setSearchText(e.target.value)}\n            />\n            <InputGroupAddon addonType=\"append\">\n              <Button color=\"info\">Search</Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </form>\n      </nav>\n    </header>\n  );\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./MoviePoster.scss\";\n\nfunction MoviePoster(props) {\n  const history = useHistory();\n  const { imdbID, Title, Poster } = props.movie;\n  return (\n    <div\n      className=\"movie-poster\"\n      onClick={() => history.push(`/movies/${imdbID}`)}\n    >\n      <h3>{Title}</h3>\n      <img src={Poster} alt={Title} />\n    </div>\n  );\n}\n\nexport default MoviePoster;\n","import React from \"react\";\nimport MoviePoster from \"./MoviePoster\";\nimport \"./MovieList.scss\";\n\nfunction MovieList(props) {\n  const { movies } = props;\n  return (\n    <div className=\"movie-list\">\n      {Object.values(movies).map(movie => (\n        <MoviePoster key={movie.imdbID} movie={movie} />\n      ))}\n    </div>\n  );\n}\n\nexport default MovieList;\n","const key = \"5262f097\";\n\nexport default key;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Alert } from \"reactstrap\";\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\nimport MovieList from \"./MovieList\";\nimport ReactPaginate from \"react-paginate\";\nimport key from \"../config\";\nimport \"./SearchResults.scss\";\n\nfunction SearchResults(props) {\n  const location = useLocation();\n  const { term, page } = useParams();\n  const history = useHistory();\n\n  const [searchResults, setSearchResults] = useState({});\n  const [totalResults, setTotalResults] = useState(0);\n\n  const handleSearch = (term, page = 1) => {\n    const url = `https://www.omdbapi.com/?s=${term}&page=${page}&apikey=${key}`;\n    axios.get(url).then(({ data }) => {\n      let filtered;\n      if (data.Search) {\n        filtered = data.Search.filter(movie => movie.Poster !== \"N/A\");\n      }\n      setTotalResults(data.totalResults);\n      setSearchResults(filtered);\n    });\n  };\n\n  const handlePageClick = ({ selected }) => {\n    history.push(`/search/${term}/${selected + 1}`);\n  };\n\n  useEffect(() => {\n    if (term) {\n      handleSearch(term, page);\n    }\n    // eslint-disable-next-line\n  }, [location]);\n\n  return (\n    <div className=\"search-results\">\n      {totalResults > 0 ? (\n        <>\n          <MovieList movies={searchResults} />\n          <nav className=\"pagination\" aria-label=\"Pagination\">\n            <ReactPaginate\n              previousLabel={\"‹\"}\n              previousClassName={\"page-item\"}\n              nextLabel={\"›\"}\n              nextClassName={\"page-item\"}\n              breakLabel={\"...\"}\n              breakClassName={\"page-item\"}\n              breakLinkClassName={\"page-link\"}\n              forcePage={Number(page - 1) || 0}\n              pageCount={Math.ceil(totalResults / 10)}\n              pageClassName={\"page-item\"}\n              pageLinkClassName={\"page-link\"}\n              previousLinkClassName={\"page-link\"}\n              nextLinkClassName={\"page-link\"}\n              marginPagesDisplayed={2}\n              onPageChange={handlePageClick}\n              pageRangeDisplayed={5}\n              containerClassName={\"pagination\"}\n              subContainerClassName={\"pages pagination\"}\n              activeClassName={\"active\"}\n            />\n          </nav>\n        </>\n      ) : (\n        <Alert color=\"secondary\">\n          Search for a movie using the search bar and the results will appear\n          here\n        </Alert>\n      )}\n    </div>\n  );\n}\n\nexport default SearchResults;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Tabs.scss\";\n\nfunction Tabs(props) {\n  return (\n    <nav className=\"tabs\">\n      <NavLink to=\"/movies\">Browse</NavLink>\n      <NavLink to=\"/saved\">Saved</NavLink>\n      <NavLink to=\"/search\">Search</NavLink>\n    </nav>\n  );\n}\n\nexport default Tabs;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Alert } from \"reactstrap\";\nimport \"./SavedList.scss\";\n\nfunction SavedList(props) {\n  const { movies, savedList } = props;\n  return (\n    <div className=\"saved-list\">\n      {savedList.length > 0 ? (\n        <>\n          <h3>Saved Movies</h3>\n          <ul>\n            {savedList.map(imdbID => (\n              <li key={imdbID} className=\"saved-movie\">\n                <Link to={`/movies/${imdbID}`}>{movies[imdbID].Title}</Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <Alert color=\"secondary\">No movies saved</Alert>\n      )}\n    </div>\n  );\n}\n\nexport default SavedList;\n","import React from \"react\";\nimport \"./MovieCard.scss\";\n\nfunction MovieCard(props) {\n  const { movie, handleList } = props;\n  const [savedList, addToSavedList, deleteFromSavedList] = handleList;\n  const { imdbID, Title, Director, imdbRating, Actors, Poster, Plot } = movie;\n\n  const isSaved = savedList.includes(imdbID);\n\n  return (\n    <div className=\"movie-card\">\n      <div>\n        <h3>{Title}</h3>\n      </div>\n      <div>\n        <div className=\"img-wrapper\">\n          <img src={Poster} alt={Title} />\n        </div>\n        <div className=\"movie-info\">\n          <div className=\"movie-director\">\n            Director: <em>{Director}</em>\n          </div>\n          <div className=\"movie-metascore\">\n            IMDB Rating: <strong>{imdbRating}</strong>\n          </div>\n          <h4>Actors</h4>\n          <p>{Actors}</p>\n          <h4>Plot</h4>\n          <p>{Plot}</p>\n          {isSaved ? (\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={() => deleteFromSavedList(imdbID)}\n            >\n              Saved\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={() => addToSavedList(imdbID)}\n            >\n              Save\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieCard;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Alert } from \"reactstrap\";\nimport key from \"../config\";\nimport MovieCard from \"./MovieCard\";\n\nfunction Movie(props) {\n  const match = useRouteMatch();\n  const { id } = match.params;\n  const { handleList, handleMovies } = props;\n  const [movies, setMovies] = handleMovies;\n  const [error, setError] = useState(\"\");\n  const movie = movies[id];\n\n  useEffect(() => {\n    if (!movie) {\n      const url = `https://www.omdbapi.com/?i=${id}&apikey=${key}`;\n      axios.get(url).then(({ data }) => {\n        if (data.Error) {\n          return setError(data.Error);\n        }\n        const copy = { ...movies };\n        copy[id] = data;\n        setMovies(copy);\n      });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  if (error) {\n    return <Alert color=\"warning\">{error}</Alert>;\n  } else if (!movie) {\n    return <Alert color=\"secondary\">Loading...</Alert>;\n  }\n\n  return <MovieCard movie={movie} handleList={handleList} />;\n}\n\nexport default Movie;\n","const data = {\n  tt0068646: {\n    Title: \"The Godfather\",\n    Year: \"1972\",\n    Rated: \"R\",\n    Released: \"24 Mar 1972\",\n    Runtime: \"175 min\",\n    Genre: \"Crime, Drama\",\n    Director: \"Francis Ford Coppola\",\n    Writer:\n      \"Mario Puzo (screenplay by), Francis Ford Coppola (screenplay by), Mario Puzo (based on the novel by)\",\n    Actors: \"Marlon Brando, Al Pacino, James Caan, Richard S. Castellano\",\n    Plot:\n      \"The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.\",\n    Language: \"English, Italian, Latin\",\n    Country: \"USA\",\n    Awards: \"Won 3 Oscars. Another 26 wins & 30 nominations.\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BM2MyNjYxNmUtYTAwNi00MTYxLWJmNWYtYzZlODY3ZTk3OTFlXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg\",\n    Ratings: [\n      { Source: \"Internet Movie Database\", Value: \"9.2/10\" },\n      { Source: \"Rotten Tomatoes\", Value: \"98%\" },\n      { Source: \"Metacritic\", Value: \"100/100\" }\n    ],\n    Metascore: \"100\",\n    imdbRating: \"9.2\",\n    imdbVotes: \"1,509,742\",\n    imdbID: \"tt0068646\",\n    Type: \"movie\",\n    DVD: \"09 Oct 2001\",\n    BoxOffice: \"N/A\",\n    Production: \"Paramount Pictures\",\n    Website: \"N/A\",\n    Response: \"True\"\n  },\n  tt0076759: {\n    Title: \"Star Wars: Episode IV - A New Hope\",\n    Year: \"1977\",\n    Rated: \"PG\",\n    Released: \"25 May 1977\",\n    Runtime: \"121 min\",\n    Genre: \"Action, Adventure, Fantasy, Sci-Fi\",\n    Director: \"George Lucas\",\n    Writer: \"George Lucas\",\n    Actors: \"Mark Hamill, Harrison Ford, Carrie Fisher, Peter Cushing\",\n    Plot:\n      \"Luke Skywalker joins forces with a Jedi Knight, a cocky pilot, a Wookiee and two droids to save the galaxy from the Empire's world-destroying battle station, while also attempting to rescue Princess Leia from the mysterious Darth Vader.\",\n    Language: \"English\",\n    Country: \"USA\",\n    Awards: \"Won 6 Oscars. Another 52 wins & 28 nominations.\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BNzVlY2MwMjktM2E4OS00Y2Y3LWE3ZjctYzhkZGM3YzA1ZWM2XkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg\",\n    Ratings: [\n      { Source: \"Internet Movie Database\", Value: \"8.6/10\" },\n      { Source: \"Rotten Tomatoes\", Value: \"93%\" },\n      { Source: \"Metacritic\", Value: \"90/100\" }\n    ],\n    Metascore: \"90\",\n    imdbRating: \"8.6\",\n    imdbVotes: \"1,170,893\",\n    imdbID: \"tt0076759\",\n    Type: \"movie\",\n    DVD: \"21 Sep 2004\",\n    BoxOffice: \"N/A\",\n    Production: \"20th Century Fox\",\n    Website: \"N/A\",\n    Response: \"True\"\n  },\n  tt0120737: {\n    Title: \"The Lord of the Rings: The Fellowship of the Ring\",\n    Year: \"2001\",\n    Rated: \"PG-13\",\n    Released: \"19 Dec 2001\",\n    Runtime: \"178 min\",\n    Genre: \"Adventure, Drama, Fantasy\",\n    Director: \"Peter Jackson\",\n    Writer:\n      \"J.R.R. Tolkien (novel), Fran Walsh (screenplay), Philippa Boyens (screenplay), Peter Jackson (screenplay)\",\n    Actors: \"Alan Howard, Noel Appleby, Sean Astin, Sala Baker\",\n    Plot:\n      \"A meek Hobbit from the Shire and eight companions set out on a journey to destroy the powerful One Ring and save Middle-earth from the Dark Lord Sauron.\",\n    Language: \"English, Sindarin\",\n    Country: \"New Zealand, USA\",\n    Awards: \"Won 4 Oscars. Another 115 wins & 124 nominations.\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BN2EyZjM3NzUtNWUzMi00MTgxLWI0NTctMzY4M2VlOTdjZWRiXkEyXkFqcGdeQXVyNDUzOTQ5MjY@._V1_SX300.jpg\",\n    Ratings: [\n      { Source: \"Internet Movie Database\", Value: \"8.8/10\" },\n      { Source: \"Rotten Tomatoes\", Value: \"91%\" },\n      { Source: \"Metacritic\", Value: \"92/100\" }\n    ],\n    Metascore: \"92\",\n    imdbRating: \"8.8\",\n    imdbVotes: \"1,568,706\",\n    imdbID: \"tt0120737\",\n    Type: \"movie\",\n    DVD: \"06 Aug 2002\",\n    BoxOffice: \"$314,000,000\",\n    Production: \"New Line Cinema\",\n    Website: \"N/A\",\n    Response: \"True\"\n  },\n  tt0082971: {\n    Title: \"Raiders of the Lost Ark\",\n    Year: \"1981\",\n    Rated: \"PG\",\n    Released: \"12 Jun 1981\",\n    Runtime: \"115 min\",\n    Genre: \"Action, Adventure\",\n    Director: \"Steven Spielberg\",\n    Writer:\n      \"Lawrence Kasdan (screenplay by), George Lucas (story by), Philip Kaufman (story by)\",\n    Actors: \"Harrison Ford, Karen Allen, Paul Freeman, Ronald Lacey\",\n    Plot:\n      \"In 1936, archaeologist and adventurer Indiana Jones is hired by the U.S. government to find the Ark of the Covenant before Adolf Hitler's Nazis can obtain its awesome powers.\",\n    Language: \"English, German, Hebrew, Spanish, Arabic, Nepali\",\n    Country: \"USA\",\n    Awards: \"Won 4 Oscars. Another 31 wins & 24 nominations.\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BMjA0ODEzMTc1Nl5BMl5BanBnXkFtZTcwODM2MjAxNA@@._V1_SX300.jpg\",\n    Ratings: [\n      { Source: \"Internet Movie Database\", Value: \"8.4/10\" },\n      { Source: \"Rotten Tomatoes\", Value: \"95%\" },\n      { Source: \"Metacritic\", Value: \"85/100\" }\n    ],\n    Metascore: \"85\",\n    imdbRating: \"8.4\",\n    imdbVotes: \"841,331\",\n    imdbID: \"tt0082971\",\n    Type: \"movie\",\n    DVD: \"21 Oct 2003\",\n    BoxOffice: \"N/A\",\n    Production: \"Paramount Pictures\",\n    Website: \"N/A\",\n    Response: \"True\"\n  },\n  tt0108358: {\n    Title: \"Tombstone\",\n    Year: \"1993\",\n    Rated: \"R\",\n    Released: \"25 Dec 1993\",\n    Runtime: \"130 min\",\n    Genre: \"Action, Biography, Drama, History, Western\",\n    Director: \"George P. Cosmatos, Kevin Jarre\",\n    Writer: \"Kevin Jarre\",\n    Actors: \"Kurt Russell, Val Kilmer, Sam Elliott, Bill Paxton\",\n    Plot:\n      \"A successful lawman's plans to retire anonymously in Tombstone, Arizona, are disrupted by the kind of outlaws he was famous for eliminating.\",\n    Language: \"English, Latin\",\n    Country: \"USA\",\n    Awards: \"2 nominations.\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BODRkYzA4MGItODE2MC00ZjkwLWI2NDEtYzU1NzFiZGU1YzA0XkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_SX300.jpg\",\n    Ratings: [\n      { Source: \"Internet Movie Database\", Value: \"7.8/10\" },\n      { Source: \"Rotten Tomatoes\", Value: \"73%\" },\n      { Source: \"Metacritic\", Value: \"50/100\" }\n    ],\n    Metascore: \"50\",\n    imdbRating: \"7.8\",\n    imdbVotes: \"119,120\",\n    imdbID: \"tt0108358\",\n    Type: \"movie\",\n    DVD: \"02 Dec 1997\",\n    BoxOffice: \"N/A\",\n    Production: \"Buena Vista\",\n    Website: \"N/A\",\n    Response: \"True\"\n  },\n  tt0103064: {\n    Title: \"Terminator 2: Judgment Day\",\n    Year: \"1991\",\n    Rated: \"R\",\n    Released: \"03 Jul 1991\",\n    Runtime: \"137 min\",\n    Genre: \"Action, Sci-Fi\",\n    Director: \"James Cameron\",\n    Writer: \"James Cameron, William Wisher\",\n    Actors:\n      \"Arnold Schwarzenegger, Linda Hamilton, Edward Furlong, Robert Patrick\",\n    Plot:\n      \"A cyborg, identical to the one who failed to kill Sarah Connor, must now protect her teenage son, John Connor, from a more advanced and powerful cyborg.\",\n    Language: \"English, Spanish\",\n    Country: \"USA\",\n    Awards: \"Won 4 Oscars. Another 32 wins & 33 nominations.\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BMGU2NzRmZjUtOGUxYS00ZjdjLWEwZWItY2NlM2JhNjkxNTFmXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\",\n    Ratings: [\n      { Source: \"Internet Movie Database\", Value: \"8.5/10\" },\n      { Source: \"Rotten Tomatoes\", Value: \"93%\" },\n      { Source: \"Metacritic\", Value: \"75/100\" }\n    ],\n    Metascore: \"75\",\n    imdbRating: \"8.5\",\n    imdbVotes: \"948,480\",\n    imdbID: \"tt0103064\",\n    Type: \"movie\",\n    DVD: \"31 Mar 1998\",\n    BoxOffice: \"$198,116,802\",\n    Production: \"TriStar Pictures\",\n    Website: \"N/A\",\n    Response: \"True\"\n  },\n  tt0062622: {\n    Title: \"2001: A Space Odyssey\",\n    Year: \"1968\",\n    Rated: \"G\",\n    Released: \"12 May 1968\",\n    Runtime: \"149 min\",\n    Genre: \"Adventure, Sci-Fi\",\n    Director: \"Stanley Kubrick\",\n    Writer: \"Stanley Kubrick (screenplay), Arthur C. Clarke (screenplay)\",\n    Actors: \"Keir Dullea, Gary Lockwood, William Sylvester, Daniel Richter\",\n    Plot:\n      \"After discovering a mysterious artifact buried beneath the Lunar surface, mankind sets off on a quest to find its origins with help from intelligent supercomputer H.A.L. 9000.\",\n    Language: \"English, Russian\",\n    Country: \"USA, UK\",\n    Awards: \"Won 1 Oscar. Another 15 wins & 10 nominations.\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BMmNlYzRiNDctZWNhMi00MzI4LThkZTctMTUzMmZkMmFmNThmXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg\",\n    Ratings: [\n      { Source: \"Internet Movie Database\", Value: \"8.3/10\" },\n      { Source: \"Rotten Tomatoes\", Value: \"93%\" },\n      { Source: \"Metacritic\", Value: \"84/100\" }\n    ],\n    Metascore: \"84\",\n    imdbRating: \"8.3\",\n    imdbVotes: \"566,801\",\n    imdbID: \"tt0062622\",\n    Type: \"movie\",\n    DVD: \"25 Aug 1998\",\n    BoxOffice: \"$135,620\",\n    Production: \"Warner Bros. Pictures\",\n    Website: \"N/A\",\n    Response: \"True\"\n  },\n  tt0107048: {\n    Title: \"Groundhog Day\",\n    Year: \"1993\",\n    Rated: \"PG\",\n    Released: \"12 Feb 1993\",\n    Runtime: \"101 min\",\n    Genre: \"Comedy, Fantasy, Romance\",\n    Director: \"Harold Ramis\",\n    Writer:\n      \"Danny Rubin (screenplay), Harold Ramis (screenplay), Danny Rubin (story)\",\n    Actors: \"Bill Murray, Andie MacDowell, Chris Elliott, Stephen Tobolowsky\",\n    Plot:\n      \"A weatherman finds himself inexplicably living the same day over and over again.\",\n    Language: \"English, French, Italian\",\n    Country: \"USA\",\n    Awards: \"Won 1 BAFTA Film Award. Another 6 wins & 17 nominations.\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BZWIxNzM5YzQtY2FmMS00Yjc3LWI1ZjUtNGVjMjMzZTIxZTIxXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\",\n    Ratings: [\n      { Source: \"Internet Movie Database\", Value: \"8.0/10\" },\n      { Source: \"Rotten Tomatoes\", Value: \"96%\" },\n      { Source: \"Metacritic\", Value: \"72/100\" }\n    ],\n    Metascore: \"72\",\n    imdbRating: \"8.0\",\n    imdbVotes: \"555,878\",\n    imdbID: \"tt0107048\",\n    Type: \"movie\",\n    DVD: \"29 Jan 2002\",\n    BoxOffice: \"N/A\",\n    Production: \"Columbia Pictures\",\n    Website: \"N/A\",\n    Response: \"True\"\n  },\n  tt0071853: {\n    Title: \"Monty Python and the Holy Grail\",\n    Year: \"1975\",\n    Rated: \"PG\",\n    Released: \"25 May 1975\",\n    Runtime: \"91 min\",\n    Genre: \"Adventure, Comedy, Fantasy\",\n    Director: \"Terry Gilliam, Terry Jones\",\n    Writer:\n      \"Graham Chapman, John Cleese, Eric Idle, Terry Gilliam, Terry Jones, Michael Palin\",\n    Actors: \"Graham Chapman, John Cleese, Eric Idle, Terry Gilliam\",\n    Plot:\n      \"King Arthur and his Knights of the Round Table embark on a surreal, low-budget search for the Holy Grail, encountering many, very silly obstacles.\",\n    Language: \"English, French, Latin\",\n    Country: \"UK\",\n    Awards: \"2 wins & 2 nominations.\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BN2IyNTE4YzUtZWU0Mi00MGIwLTgyMmQtMzQ4YzQxYWNlYWE2XkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\",\n    Ratings: [\n      { Source: \"Internet Movie Database\", Value: \"8.2/10\" },\n      { Source: \"Rotten Tomatoes\", Value: \"97%\" },\n      { Source: \"Metacritic\", Value: \"93/100\" }\n    ],\n    Metascore: \"93\",\n    imdbRating: \"8.2\",\n    imdbVotes: \"476,994\",\n    imdbID: \"tt0071853\",\n    Type: \"movie\",\n    DVD: \"07 Sep 1999\",\n    BoxOffice: \"N/A\",\n    Production: \"Almi Cinema 5\",\n    Website: \"N/A\",\n    Response: \"True\"\n  }\n};\n\nexport default data;\n","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\n\nimport SearchBar from \"./components/SearchBar\";\nimport SearchResults from \"./components/SearchResults\";\nimport Tabs from \"./components/Tabs\";\nimport SavedList from \"./components/SavedList\";\nimport MovieList from \"./components/MovieList\";\nimport Movie from \"./components/Movie\";\nimport initialData from \"./data/movies\";\nimport \"./App.scss\";\n\nfunction App() {\n  const [savedList, setSavedList] = useState([]);\n  const [movies, setMovies] = useState(initialData);\n\n  const addToSavedList = id => {\n    if (!savedList.includes(id)) {\n      setSavedList([...savedList, id]);\n    }\n  };\n\n  const deleteFromSavedList = id => {\n    const filtered = [...savedList].filter(el => el !== id);\n    setSavedList(filtered);\n  };\n\n  return (\n    <Router basename=\"/React-Router-Movies\">\n      <SearchBar />\n      <main className=\"main\">\n        <Tabs />\n        <Switch>\n          <Route path=\"/saved\">\n            <SavedList movies={movies} savedList={savedList} />\n          </Route>\n          <Route path={[\"/search/:term/:page\", \"/search/:term\", \"/search\"]}>\n            <SearchResults />\n          </Route>\n          <Route exact path=\"/movies\">\n            <MovieList movies={movies} />\n          </Route>\n          <Route path=\"/movies/:id\">\n            <Movie\n              handleMovies={[movies, setMovies]}\n              handleList={[savedList, addToSavedList, deleteFromSavedList]}\n            />\n          </Route>\n          <Redirect to=\"/movies\" />\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}